// --- –ü–µ—Ä–µ–º–∏–∫–∞—á —Ç–µ–º–∏ (—Å–≤—ñ—Ç–ª–∞/—Ç–µ–º–Ω–∞) ---
const themeToggle = document.getElementById('theme-toggle');
const body = document.body;

// –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–º—É –∑ localStorage –∞–±–æ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º —Å–≤—ñ—Ç–ª—É
function setTheme(theme) {
  if (theme === 'dark') {
    body.classList.add('dark');
    themeToggle.textContent = '‚òÄÔ∏è';
  } else {
    body.classList.remove('dark');
    themeToggle.textContent = 'üåô';
  }
  localStorage.setItem('theme', theme);
}

const savedTheme = localStorage.getItem('theme') || 'light';
setTheme(savedTheme);

themeToggle.addEventListener('click', () => {
  const newTheme = body.classList.contains('dark') ? 'light' : 'dark';
  setTheme(newTheme);
});

// --- –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É/–ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏ API ---
// –ü–æ–∫–∞–∑—É—î –∞–±–æ —Ö–æ–≤–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É API
function showApiError(show) {
  document.getElementById('api-error').classList.toggle('hidden', !show);
}

// --- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —Å–∏—Å—Ç–µ–º–∏ ---
// –û–Ω–æ–≤–ª—é—î —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º–∏ —á–µ—Ä–µ–∑ API
async function loadStatus() {
  try {
    const res = await fetch('/api/status');
    if (!res.ok) throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
    const data = await res.json();
    document.getElementById('status-content').textContent = `–°—Ç–∞–Ω: ${data.status === 'online' ? 'üü¢ –û–Ω–ª–∞–π–Ω' : 'üî¥ –û—Ñ–ª–∞–π–Ω'}`;
    showApiError(false);
  } catch (e) {
    document.getElementById('status-content').textContent = '–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö';
    showApiError(true);
  }
}

// --- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—ñ–≤ ---
// –û–Ω–æ–≤–ª—é—î —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤ —á–µ—Ä–µ–∑ API
async function loadServices() {
  try {
    const res = await fetch('/api/services');
    if (!res.ok) throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
    const services = await res.json();
    const html = services.map(s => `
      <div class="service-row">
        <b>${s.name}</b>: ${s.status === 'running' ? 'üü¢' : 'üî¥'}
        <button onclick="serviceAction('${s.name}','start')">–°—Ç–∞—Ä—Ç</button>
        <button onclick="serviceAction('${s.name}','stop')">–°—Ç–æ–ø</button>
        <button onclick="serviceAction('${s.name}','restart')">–†–µ—Å—Ç–∞—Ä—Ç</button>
      </div>
    `).join('');
    document.getElementById('services-list').innerHTML = html;
    showApiError(false);
  } catch (e) {
    document.getElementById('services-list').textContent = '–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö';
    showApiError(true);
  }
}

// --- –î—ñ—ó –Ω–∞–¥ —Å–µ—Ä–≤—ñ—Å–∞–º–∏ ---
// –ó–∞–ø—É—Å–∫–∞—î/–∑—É–ø–∏–Ω—è—î/–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—î —Å–µ—Ä–≤—ñ—Å —á–µ—Ä–µ–∑ API
window.serviceAction = async (name, action) => {
  try {
    const res = await fetch(`/api/services/${name}/${action}`, {method: 'POST'});
    if (!res.ok) throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
    await loadServices();
  } catch (e) {
    alert('–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –¥—ñ—ó!');
  }
};

// --- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ ---
// –û–Ω–æ–≤–ª—é—î —Å–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —á–µ—Ä–µ–∑ API
async function loadUsers() {
  try {
    const res = await fetch('/api/users');
    if (!res.ok) throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
    const users = await res.json();
    const html = users.map(u => `
      <div class="user-row">
        <b>${u.username}</b> (${u.status})
        <button onclick="deleteUser('${u.username}')">–í–∏–¥–∞–ª–∏—Ç–∏</button>
      </div>
    `).join('');
    document.getElementById('users-list').innerHTML = html;
    showApiError(false);
  } catch (e) {
    document.getElementById('users-list').textContent = '–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö';
    showApiError(true);
  }
}

// --- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ---
document.getElementById('user-create-form').addEventListener('submit', async (e) => {
  e.preventDefault();
  const username = document.getElementById('new-username').value.trim();
  const password = document.getElementById('new-password').value;
  if (!username || !password) return;
  try {
    const res = await fetch('/api/users', {
      method: 'POST',
      headers: {'Content-Type': 'application/json'},
      body: JSON.stringify({username, password})
    });
    if (!res.ok) throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
    document.getElementById('new-username').value = '';
    document.getElementById('new-password').value = '';
    await loadUsers();
  } catch (e) {
    alert('–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!');
  }
});

// --- –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ---
// –í–∏–¥–∞–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–µ—Ä–µ–∑ API
window.deleteUser = async (username) => {
  if (!confirm(`–í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${username}?`)) return;
  try {
    const res = await fetch(`/api/users/${username}`, {method: 'DELETE'});
    if (!res.ok) throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
    await loadUsers();
  } catch (e) {
    alert('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!');
  }
};

// --- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π ---
// –û–Ω–æ–≤–ª—é—î —Å–ø–∏—Å–æ–∫ –±–µ–∫–∞–ø—ñ–≤ —á–µ—Ä–µ–∑ API
async function loadBackups() {
  try {
    const res = await fetch('/api/backup');
    if (!res.ok) throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
    const backups = await res.json();
    const html = backups.map(b => `
      <div class="backup-row">
        <b>${b.name}</b> (${(b.size/1024/1024).toFixed(1)} MB, ${b.date})
      </div>
    `).join('');
    document.getElementById('backup-list').innerHTML = html;
    showApiError(false);
  } catch (e) {
    document.getElementById('backup-list').textContent = '–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö';
    showApiError(true);
  }
}

// --- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó ---
// –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π –±–µ–∫–∞–ø —á–µ—Ä–µ–∑ API
document.getElementById('backup-create').addEventListener('click', async () => {
  try {
    const res = await fetch('/api/backup', {method: 'POST'});
    if (!res.ok) throw new Error('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
    await loadBackups();
  } catch (e) {
    alert('–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó!');
  }
});

// --- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è ---
// –ó–∞–ø—É—Å–∫–∞—î –≤—Å—ñ –æ—Å–Ω–æ–≤–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
function init() {
  loadStatus();
  loadServices();
  loadUsers();
  loadBackups();
}

window.addEventListener('DOMContentLoaded', init); 