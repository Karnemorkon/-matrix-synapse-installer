#!/bin/bash
# ===================================================================================
# Matrix Synapse –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –Ü–Ω—Å—Ç–∞–ª—è—Ç–æ—Ä - –ì–æ–ª–æ–≤–Ω–∞ –¢–æ—á–∫–∞ –í—Ö–æ–¥—É
# –í–µ—Ä—Å—ñ—è: 4.0 –ó –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –≤–µ–± —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É —Ç–∞ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
# ===================================================================================

set -euo pipefail

# --- –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è ---
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly PROJECT_NAME="Matrix Synapse Installer"
readonly PROJECT_VERSION="4.0"

# --- –†–∞–Ω–Ω—î –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –®–ª—è—Ö—ñ–≤ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó ---
# –¶–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑—Ä–æ–±–∏—Ç–∏ –ø–µ—Ä–µ–¥ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º –º–æ–¥—É–ª—ñ–≤ –¥–ª—è –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è —É–∑–≥–æ–¥–∂–µ–Ω–∏—Ö —à–ª—è—Ö—ñ–≤
if [[ -n "${SUDO_USER:-}" ]]; then
    # –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω–æ –∑ sudo, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–æ–º–∞—à–Ω—é –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    ACTUAL_USER_HOME=$(getent passwd "${SUDO_USER}" | cut -d: -f6)
    CONFIG_DIR="${ACTUAL_USER_HOME}/.config/matrix-installer"
else
    # –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω–æ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ —è–∫ root
    CONFIG_DIR="/root/.config/matrix-installer"
fi
readonly CONFIG_FILE="${CONFIG_DIR}/config.conf"

# –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –≤—Å—ñ –º–æ–¥—É–ª—ñ
source "${SCRIPT_DIR}/lib/logger.sh"
source "${SCRIPT_DIR}/lib/config.sh"
source "${SCRIPT_DIR}/lib/validator.sh"
source "${SCRIPT_DIR}/lib/docker.sh"
source "${SCRIPT_DIR}/lib/matrix.sh"
source "${SCRIPT_DIR}/lib/bridges.sh"
source "${SCRIPT_DIR}/lib/monitoring.sh"
source "${SCRIPT_DIR}/lib/backup.sh"
source "${SCRIPT_DIR}/lib/security.sh"
source "${SCRIPT_DIR}/lib/common.sh"
source "${SCRIPT_DIR}/lib/error-handler.sh"
source "${SCRIPT_DIR}/lib/env-config.sh"

# --- Trap –¥–ª—è rollback/cleanup ---
trap 'rollback_install; cleanup_install; exit 1' ERR

# --- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –≤–∏–º–æ–≥ ---
check_swap
check_docker_version
check_docker_compose_version

# --- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤ ---
check_system_updates

# --- –ì–æ–ª–æ–≤–Ω–∞ –§—É–Ω–∫—Ü—ñ—è ---
main() {
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
    init_logger
    
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–º–∏–ª–æ–∫
    init_error_handler
    
    # –ü–æ–∫–∞–∑—É—î–º–æ –±–∞–Ω–µ—Ä
    show_banner
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
    parse_command_line_args "$@"
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–µ—Ä–µ–¥—É–º–æ–≤–∏
    check_root_privileges
    validate_system_requirements
    
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    init_env_config
    
    # –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    validate_env_config
    
    # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
    if [[ -f "${CONFIG_FILE}" && "${FORCE_NEW_CONFIG:-false}" != "true" ]]; then
        log_info "–ó–Ω–∞–π–¥–µ–Ω–æ —ñ—Å–Ω—É—é—á—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é: ${CONFIG_FILE}"
        
        USE_EXISTING_CONFIG=$(ask_yes_no "–í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —ñ—Å–Ω—É—é—á—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é?" "false")
        if [[ "${USE_EXISTING_CONFIG}" == "true" ]]; then
            log_info "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é —ñ—Å–Ω—É—é—á—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é"
            load_config
        else
            log_info "–°—Ç–≤–æ—Ä—é—é –Ω–æ–≤—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é"
            interactive_config
        fi
    else
        log_info "–°—Ç–≤–æ—Ä—é—é –Ω–æ–≤—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é"
        interactive_config
    fi
    
    # –í–∞–ª—ñ–¥—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
    validate_config
    
    # –ü–æ–∫–∞–∑—É—î–º–æ –ø—ñ–¥—Å—É–º–æ–∫ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
    show_config_summary
    
    # –ü–æ–∫–∞–∑—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    show_env_config
    
    CONTINUE_INSTALL=$(ask_yes_no "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è?" "false")
    if [[ "${CONTINUE_INSTALL}" != "true" ]]; then
        log_info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º"
        exit 0
    fi
    
    # –í–∏–∫–æ–Ω—É—î–º–æ –∫—Ä–æ–∫–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
    execute_installation
    
    # –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
    show_completion_message
}

# --- –û–±—Ä–æ–±–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞ ---
parse_command_line_args() {
    local args=("$@")
    
    for arg in "${args[@]}"; do
        case "$arg" in
            --force-new-config)
                FORCE_NEW_CONFIG="true"
                log_info "–ü—Ä–∏–º—É—Å–æ–≤–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó"
                ;;
            --help|-h)
                show_help
                exit 0
                ;;
            --version|-v)
                echo "Matrix Synapse Installer v${PROJECT_VERSION}"
                exit 0
                ;;
            *)
                log_warning "–ù–µ–≤—ñ–¥–æ–º–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç: $arg"
                ;;
        esac
    done
}

# --- –ü–æ–∫–∞–∑ –¥–æ–≤—ñ–¥–∫–∏ ---
show_help() {
    cat << 'EOF'
Matrix Synapse Installer v4.0

–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
  ./install.sh [–æ–ø—Ü—ñ—ó]

–û–ø—Ü—ñ—ó:
  --force-new-config       –ü—Ä–∏–º—É—Å–æ–≤–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
  --help, -h               –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É
  --version, -v            –ü–æ–∫–∞–∑–∞—Ç–∏ –≤–µ—Ä—Å—ñ—é

–ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞:
  MATRIX_DOMAIN                    –î–æ–º–µ–Ω –¥–ª—è Matrix —Å–µ—Ä–≤–µ—Ä–∞
  MATRIX_BASE_DIR                  –ë–∞–∑–æ–≤–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
  MATRIX_POSTGRES_PASSWORD         –ü–∞—Ä–æ–ª—å –¥–ª—è PostgreSQL
  MATRIX_ALLOW_PUBLIC_REGISTRATION –î–æ–∑–≤–æ–ª–∏—Ç–∏ –ø—É–±–ª—ñ—á–Ω—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é
  MATRIX_ENABLE_FEDERATION         –£–≤—ñ–º–∫–Ω—É—Ç–∏ —Ñ–µ–¥–µ—Ä–∞—Ü—ñ—é
  MATRIX_INSTALL_ELEMENT           –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ Element Web
  MATRIX_INSTALL_BRIDGES           –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –º–æ—Å—Ç–∏
  MATRIX_SETUP_MONITORING          –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥
  MATRIX_SETUP_BACKUP              –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Ä–µ–∑–µ—Ä–≤–Ω–µ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è
  MATRIX_USE_CLOUDFLARE_TUNNEL     –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ Cloudflare Tunnel
  MATRIX_INSTALL_SIGNAL_BRIDGE     –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ Signal Bridge
  MATRIX_INSTALL_WHATSAPP_BRIDGE   –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ WhatsApp Bridge
  MATRIX_INSTALL_DISCORD_BRIDGE    –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ Discord Bridge
  MATRIX_SSL_ENABLED               –£–≤—ñ–º–∫–Ω—É—Ç–∏ SSL
  MATRIX_FIREWALL_ENABLED          –£–≤—ñ–º–∫–Ω—É—Ç–∏ —Ñ–∞–π—Ä–≤–æ–ª
  MATRIX_RATE_LIMITING             –£–≤—ñ–º–∫–Ω—É—Ç–∏ –æ–±–º–µ–∂–µ–Ω–Ω—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ
  MATRIX_GRAFANA_PASSWORD          –ü–∞—Ä–æ–ª—å –¥–ª—è Grafana
  MATRIX_PROMETHEUS_ENABLED        –£–≤—ñ–º–∫–Ω—É—Ç–∏ Prometheus
  MATRIX_BACKUP_RETENTION_DAYS     –î–Ω—ñ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π
  MATRIX_BACKUP_SCHEDULE           –†–æ–∑–∫–ª–∞–¥ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è
  MATRIX_CLOUDFLARE_TUNNEL_TOKEN   –¢–æ–∫–µ–Ω Cloudflare Tunnel
  MATRIX_WEB_DASHBOARD_PORT        –ü–æ—Ä—Ç –≤–µ–± —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
  MATRIX_WEB_DASHBOARD_ENABLED     –£–≤—ñ–º–∫–Ω—É—Ç–∏ –≤–µ–± —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å

–ü—Ä–∏–∫–ª–∞–¥–∏:
  # –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
  ./install.sh

  # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ –∑–º—ñ–Ω–Ω–∏–º–∏ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
  MATRIX_DOMAIN=matrix.example.com ./install.sh

  # –ü—Ä–∏–º—É—Å–æ–≤–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
  ./install.sh --force-new-config
EOF
}

# --- –î–æ–ø–æ–º—ñ–∂–Ω—ñ –§—É–Ω–∫—Ü—ñ—ó ---
show_banner() {
    cat << 'EOF'
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                                              ‚ïë
‚ïë                    üöÄ Matrix Synapse Auto Installer 4.0                     ‚ïë
‚ïë                                                                              ‚ïë
‚ïë    –ê–≤—Ç–æ–º–∞—Ç–∏–∑–æ–≤–∞–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Matrix Synapse –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –º–æ—Å—Ç—ñ–≤,          ‚ïë
‚ïë         –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É, —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ç–∞ –≤–µ–± —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É                ‚ïë
‚ïë                                                                              ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo
}

execute_installation() {
    log_info "–ü–æ—á–∞—Ç–æ–∫ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Matrix Synapse"
    
    # –ö—Ä–æ–∫ 1: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    log_step "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"
    install_docker_dependencies
    
    # –ö—Ä–æ–∫ 1.5: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    log_step "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"
    install_additional_dependencies
    
    # –ö—Ä–æ–∫ 1.7: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    log_step "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"
    if ! verify_dependencies; then
        log_error "–ù–µ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏ —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."
        exit 1
    fi
    
    # –ö—Ä–æ–∫ 2: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π
    log_step "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π"
    setup_directory_structure
    
    # –ö—Ä–æ–∫ 3: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π
    log_step "–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤"
    generate_synapse_config
    
    # –ì–µ–Ω–µ—Ä—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é Element —è–∫—â–æ —É–≤—ñ–º–∫–Ω–µ–Ω–æ
    if [[ "${INSTALL_ELEMENT}" == "true" ]]; then
        generate_element_config
    fi
    
    if [[ "${INSTALL_BRIDGES}" == "true" ]]; then
        generate_bridge_configs
    fi
    
    # –ö—Ä–æ–∫ 4: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏
    log_step "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏"
    setup_security
    
    # –ö—Ä–æ–∫ 5: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
    if [[ "${SETUP_MONITORING}" == "true" ]]; then
        log_step "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É"
        setup_monitoring_stack
    fi
    
    # –ö—Ä–æ–∫ 6: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è
    if [[ "${SETUP_BACKUP}" == "true" ]]; then
        log_step "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è"
        setup_backup_system
    fi
    
    # –ö—Ä–æ–∫ 7: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤–µ–± —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
    if [[ "${WEB_DASHBOARD_ENABLED}" == "true" ]]; then
        log_step "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤–µ–± —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É"
        log_info "–í–µ–± —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π —á–µ—Ä–µ–∑ Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    fi
    
    # –ö—Ä–æ–∫ 8: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è Docker Compose
    log_step "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è Docker Compose –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó"
    generate_docker_compose

    # –ö—Ä–æ–∫ 9: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Element Web
    if [[ "${INSTALL_ELEMENT}" == "true" ]]; then
        log_step "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Element Web"
        download_element_web
    fi

    # –ö—Ä–æ–∫ 10: –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤
    log_step "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤"
    start_matrix_services
    
    # –ö—Ä–æ–∫ 11: –ü–æ—Å—Ç-—ñ–Ω—Å—Ç–∞–ª—è—Ü—ñ–π–Ω–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    log_step "–ü–æ—Å—Ç-—ñ–Ω—Å—Ç–∞–ª—è—Ü—ñ–π–Ω–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
    post_installation_setup
    
    # –ö—Ä–æ–∫ 12: –û—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É
    log_step "–û—á–∏—â–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏"
    cleanup_package_cache
    
    # --- –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —Å—Ç–∞—Ä—ñ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –∑ —ñ–º–µ–Ω–∞–º–∏, —â–æ –º—ñ—Å—Ç—è—Ç—å matrix-redis, matrix-postgres, matrix-synapse, matrix-nginx ---
    log_info "–í–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö —Å—Ç–∞—Ä–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ Matrix (redis, postgres, synapse, nginx) –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º..."
    docker ps -a --format '{{.Names}}' | grep -E 'matrix.*(redis|postgres|synapse|nginx)' | xargs -r docker rm -f
    # --- –î–∞–ª—ñ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –∑–∞–ø—É—Å–∫ docker-compose ---
    
    log_success "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!"
}

show_completion_message() {
    cat << EOF

üéâ –í–°–¢–ê–ù–û–í–õ–ï–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–Ü–®–ù–û!

üìã –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø –ü–†–û –°–ò–°–¢–ï–ú–£:
   –î–æ–º–µ–Ω: ${DOMAIN}
   –ë–∞–∑–æ–≤–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è: ${BASE_DIR}
   –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏–π —Ñ–∞–π–ª: ${CONFIG_FILE}

üîó –î–û–°–¢–£–ü –î–û –°–ï–†–í–Ü–°–Ü–í:
$(get_service_urls)

üåê –í–ï–ë –Ü–ù–¢–ï–†–§–ï–ô–°:
$(if [[ "${WEB_DASHBOARD_ENABLED}" == "true" ]]; then
    echo "   Dashboard: http://${DOMAIN}/dashboard"
    echo "   API: http://${DOMAIN}/api"
else
    echo "   –í–µ–± —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∏–º–∫–Ω–µ–Ω–æ"
fi)

üõ†Ô∏è –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –°–ò–°–¢–ï–ú–û–Æ:
   ${BASE_DIR}/bin/matrix-control.sh status
   ${BASE_DIR}/bin/matrix-control.sh logs
   ${BASE_DIR}/bin/matrix-control.sh backup
   ${BASE_DIR}/bin/matrix-control.sh update

üìö –î–û–ö–£–ú–ï–ù–¢–ê–¶–Ü–Ø:
   ${BASE_DIR}/docs/README.md

üë§ –°–¢–í–û–†–ï–ù–ù–Ø –ü–ï–†–®–û–ì–û –ö–û–†–ò–°–¢–£–í–ê–ß–ê:
   cd ${BASE_DIR}
   docker compose exec synapse register_new_matrix_user -c /data/homeserver.yaml http://localhost:8008

‚öôÔ∏è –ó–ú–Ü–ù–ù–Ü –°–ï–†–ï–î–û–í–ò–©–ê:
   –§–∞–π–ª .env —Å—Ç–≤–æ—Ä–µ–Ω–æ: ${BASE_DIR}/.env
   –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó

üê≥ DOCKER COMPOSE:
   cd ${BASE_DIR}
   docker compose up -d
   docker compose logs -f

‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è!
EOF
}

# --- –ë–µ–∫–∞–ø–∏ –≤–∞–∂–ª–∏–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤ –ø–µ—Ä–µ–¥ –∑–º—ñ–Ω–æ—é ---
if [[ -f "${BASE_DIR}/.env" && ! -f "${BASE_DIR}/.env.bak" ]]; then
    cp "${BASE_DIR}/.env" "${BASE_DIR}/.env.bak"
fi
if [[ -f "${BASE_DIR}/docker-compose.yml" && ! -f "${BASE_DIR}/docker-compose.yml.bak" ]]; then
    cp "${BASE_DIR}/docker-compose.yml" "${BASE_DIR}/docker-compose.yml.bak"
fi
if [[ -f "${BASE_DIR}/synapse/config/homeserver.yaml" && ! -f "${BASE_DIR}/synapse/config/homeserver.yaml.bak" ]]; then
    cp "${BASE_DIR}/synapse/config/homeserver.yaml" "${BASE_DIR}/synapse/config/homeserver.yaml.bak"
fi
if [[ -f "${BASE_DIR}/nginx/conf.d/matrix.conf" && ! -f "${BASE_DIR}/nginx/conf.d/matrix.conf.bak" ]]; then
    cp "${BASE_DIR}/nginx/conf.d/matrix.conf" "${BASE_DIR}/nginx/conf.d/matrix.conf.bak"
fi

# --- –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ñ–º–µ–Ω docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ ---
# –ü—Ä–∏–∫–ª–∞–¥: –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
# docker run --name mycontainer ...
# echo "mycontainer" >> "${BASE_DIR}/install_containers.list"

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω–æ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
