#!/bin/bash
# ===================================================================================
# Matrix Synapse Auto Installer - Main Entry Point
# Version: 3.0 Refactored
# ===================================================================================

set -euo pipefail

# --- Configuration ---
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly PROJECT_NAME="Matrix Synapse Installer"
readonly PROJECT_VERSION="3.0"

# Source all modules
source "${SCRIPT_DIR}/lib/logger.sh"
source "${SCRIPT_DIR}/lib/config.sh"
source "${SCRIPT_DIR}/lib/validator.sh"
source "${SCRIPT_DIR}/lib/docker.sh"
source "${SCRIPT_DIR}/lib/matrix.sh"
source "${SCRIPT_DIR}/lib/bridges.sh"
source "${SCRIPT_DIR}/lib/monitoring.sh"
source "${SCRIPT_DIR}/lib/backup.sh"
source "${SCRIPT_DIR}/lib/security.sh"

# --- Main Function ---
main() {
    # Initialize logging
    init_logger
    
    # Show banner
    show_banner
    
    # Check prerequisites
    check_root_privileges
    validate_system_requirements
    
    # Load or create configuration
    if [[ -f "${CONFIG_FILE}" ]]; then
        log_info "–ó–Ω–∞–π–¥–µ–Ω–æ —ñ—Å–Ω—É—é—á—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é: ${CONFIG_FILE}"
        load_config
        
        if ask_yes_no "–í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —ñ—Å–Ω—É—é—á—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é?"; then
            log_info "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é —ñ—Å–Ω—É—é—á—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é"
        else
            interactive_config
        fi
    else
        log_info "–°—Ç–≤–æ—Ä—é—é –Ω–æ–≤—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é"
        interactive_config
    fi
    
    # Validate configuration
    validate_config
    
    # Show configuration summary
    show_config_summary
    
    if ! ask_yes_no "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è?"; then
        log_info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º"
        exit 0
    fi
    
    # Execute installation steps
    execute_installation
    
    # Show completion message
    show_completion_message
}

# --- Helper Functions ---
show_banner() {
    cat << 'EOF'
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                                              ‚ïë
‚ïë                    üöÄ Matrix Synapse Auto Installer 3.0                     ‚ïë
‚ïë                                                                              ‚ïë
‚ïë    –ê–≤—Ç–æ–º–∞—Ç–∏–∑–æ–≤–∞–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Matrix Synapse –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –º–æ—Å—Ç—ñ–≤,          ‚ïë
‚ïë                    –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Ç–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è                      ‚ïë
‚ïë                                                                              ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo
}

execute_installation() {
    log_info "–ü–æ—á–∞—Ç–æ–∫ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Matrix Synapse"
    
    # Step 1: Install dependencies
    log_step "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"
    install_docker_dependencies
    
    # Step 2: Setup directory structure
    log_step "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π"
    setup_directory_structure
    
    # Step 3: Generate configurations
    log_step "–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤"
    generate_synapse_config
    
    if [[ "${INSTALL_BRIDGES}" == "true" ]]; then
        generate_bridge_configs
    fi
    
    # Step 4: Setup security
    log_step "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏"
    setup_security
    
    # Step 5: Setup monitoring
    if [[ "${SETUP_MONITORING}" == "true" ]]; then
        log_step "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É"
        setup_monitoring_stack
    fi
    
    # Step 6: Setup backup system
    if [[ "${SETUP_BACKUP}" == "true" ]]; then
        log_step "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è"
        setup_backup_system
    fi
    
    # Step 7: Generate Docker Compose
    log_step "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è Docker Compose –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó"
    generate_docker_compose
    
    # Step 8: Start services
    log_step "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤"
    start_matrix_services
    
    # Step 9: Post-installation setup
    log_step "–ü–æ—Å—Ç-—ñ–Ω—Å—Ç–∞–ª—è—Ü—ñ–π–Ω–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
    post_installation_setup
    
    log_success "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!"
}

show_completion_message() {
    cat << EOF

üéâ –í–°–¢–ê–ù–û–í–õ–ï–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–Ü–®–ù–û!

üìã –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø –ü–†–û –°–ò–°–¢–ï–ú–£:
   –î–æ–º–µ–Ω: ${DOMAIN}
   –ë–∞–∑–æ–≤–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è: ${BASE_DIR}
   –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏–π —Ñ–∞–π–ª: ${CONFIG_FILE}

üîó –î–û–°–¢–£–ü –î–û –°–ï–†–í–Ü–°–Ü–í:
$(get_service_urls)

üõ†Ô∏è –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –°–ò–°–¢–ï–ú–û–Æ:
   ${BASE_DIR}/bin/matrix-control.sh status
   ${BASE_DIR}/bin/matrix-control.sh logs
   ${BASE_DIR}/bin/matrix-control.sh backup

üìö –î–û–ö–£–ú–ï–ù–¢–ê–¶–Ü–Ø:
   ${BASE_DIR}/docs/README.md

üë§ –°–¢–í–û–†–ï–ù–ù–Ø –ü–ï–†–®–û–ì–û –ö–û–†–ò–°–¢–£–í–ê–ß–ê:
   cd ${BASE_DIR}
   ./bin/matrix-control.sh user create admin

‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è!
EOF
}

# Check if script is run directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
